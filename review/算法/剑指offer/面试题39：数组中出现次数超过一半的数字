## 能修改数组

思路：数组中有一个数字出现的次数超过了数组长度的一半。如果把这个数组排序，那么排序之后位于数组中间的数字一定就是那个出现次数超过数组长度一半的数字。也就是说，**这个数字是统计学上的中位数**。利用快排的思想，快排每一轮排序后，选中的数据左边的是比它小的值，选中的数据右边是比它小的值。

- 如果选中的数字的下标比中位数的下标小，那么需要从选中的数字右边找中位数。
- 如果选中的数字的下标比中位数的下标大，那么需要从选中的数字左边找中位数
- 如果选中的数字的下标等于中位数，那么它就是中位数，直接返回即可。

```javascript
var majorityElement = function(nums) {
    let length = nums.length;
    let middle = Math.floor(length/2);
    let quickSort = function(start,end){
        let l = start;
        let r = end;
        let target = nums[start];
        while(l<r){
            while(l<r&&nums[r]<=target){
                r--;
            }
            nums[l] = nums[r]
            while(l<r&&nums[l]>target){
                l++;
            }
            nums[r] = nums[l]
        }
        if(l < middle){
            return quickSort(l+1,end)
        }else if(l>middle){
            return quickSort(start,l-1)
        }else{
            return target;
        }
    }
    return quickSort(0,length-1);
};
```

## 不能修改数组

数组中有一个数字出现的次数超过数组长度的一半，说明它出现的次数比其他所有数字出现次数的和还要多。因此，我们可以在遍历数组的时候保存两个值，一个是数组中的一个数字，一个是次数，如果这个数组和之后的数字不一样，那么次数就减一，如果这个数字和之后的数字一样，那么次数就加一。如果这个数字的次数为0，那么这个数字就会被新的数字替换掉，且次数重置为1。坚持到最后没有被替换的数字就是中位数啦。

```javascript
var majorityElement = function(nums) {
   let times = 1;
   let result = nums[0];
   for(let i = 1;i<nums.length;i++){
       if(times===0){
            result = nums[i];
            times = 1;
       }else if(result !== nums[i]){
            times--
       }else if(result === nums[i]){
            times++
       }
   }
   return result
};
```

